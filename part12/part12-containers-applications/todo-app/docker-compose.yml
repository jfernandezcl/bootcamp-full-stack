version: "3"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile # Usamos el Dockerfile para producción
    container_name: frontend
    volumes:
      - ./frontend:/usr/src/app # Sincroniza los archivos del frontend con el contenedor
    ports:
      - 80:80 # Exponemos el puerto 80 para Nginx

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile # Usamos el Dockerfile para producción
    container_name: backend
    volumes:
      - ./backend:/usr/src/app # Sincroniza los archivos del backend con el contenedor
    ports:
      - 5000:5000 # Exponemos el puerto 5000 para la API del backend
    environment:
      - NODE_ENV=production # Configuramos el entorno como producción
    depends_on:
      - mongo # El backend depende de MongoDB

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Montamos la configuración de Nginx
    ports:
      - 80:80 # Exponemos el puerto 80 para acceder a la aplicación
    depends_on:
      - frontend
      - backend # Nginx depende del frontend y backend

  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo_data:/data/db # Volumen para la persistencia de los datos de MongoDB
    networks:
      - app-network

volumes:
  mongo_data: # Volumen para MongoDB

networks:
  app-network:
    driver: bridge
