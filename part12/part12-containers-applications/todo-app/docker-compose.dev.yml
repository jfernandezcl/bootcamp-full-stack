version: "3"
services:
  nginx:
    image: nginx:1.20.1
    container_name: reverse-proxy
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro # Montar la configuración de Nginx
    ports:
      - 8080:80 # Exponer solo el puerto 8080
    depends_on:
      - todo-frontend
      - todo-backend # Espera a que frontend y backend estén listos

  todo-frontend:
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile # Usa el Dockerfile de desarrollo para el frontend
    container_name: todo-frontend
    volumes:
      - ./todo-frontend:/usr/src/app # Volumen para poder editar el código en tiempo real
    environment:
      - VITE_BACKEND_URL=http://localhost:8080/api # Actualiza la URL para acceder al backend
    networks:
      - app-network
    depends_on:
      - nginx

  todo-backend:
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile # Usa el Dockerfile de desarrollo para el backend
    container_name: todo-backend
    volumes:
      - ./todo-backend:/usr/src/app # Volumen para poder editar el código en tiempo real
    environment:
      - MONGO_URL=mongodb://mongo:27017/todolist
      - REDIS_URL=redis://redis:6379
    networks:
      - app-network
    depends_on:
      - nginx

  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - app-network

volumes:
  mongo_data:

networks:
  app-network:
    driver: bridge
